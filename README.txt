->RU<-
Пакет классов, реализующий игру Жизнь (анг. Game of Life), имитирующую жизнь клеток, которые могут рождаться, жить или умирать

Подробнее о модели : https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life

Применение:
1)Создание объекта класса GameOfLife
2)Вызов метода go(float)/go(Point[]). Метод является перегруженным, от вводимых значений зависит принцип создания сетки клеток размером 100x100 (10000 клеток)
	-при передаче в метод значения float [0; 1] сетка сгенерируется сама. Переданное значение является шансом зарождения клеток (например при 	значение 0.5 каждая клетка будет рождаться с вероятностью 50%)
	-при передаче в метод массива Point цепь сгенерирует живые клетки, указанные в массиве (для этого необходимо создать массив Point[], затем 	для каждой клетки выделяется память (конструктор класса Point принимает индекс клетки в сетке, например Point[0] = new Point(5,2))
3)Иммитация будет продолжаться пока окно приложения открыто

->ENG<-
A package of classes that implements the Game of Life, which mimics the life of cells that can be born, live or die

Read more about the model: https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life

Application:
1)Creating an object of class GameOfLife
2)Call the go (float) / go (Point[]) method. The method is overloaded, the principle of creating a grid of cells 100x100 in size (10000 cells) depends on the input values.
	-when passing the float [0; 1] the grid is generated by itself. The transmitted value is a chance of cell nucleation (for example, at a value 	of 0.5, each cell will be born with a probability of 50% chance)
	-when passing the Point array to the method, the circuit will generate the living cells indicated in the array (for this it is necessary to 	create the Point[] array, then memory is allocated for each cell (the constructor of the Point class takes the index of the cell in the 		grid, for example Point [0] = new Point(5,2))
3)The simulation will continue while the application window is open.
